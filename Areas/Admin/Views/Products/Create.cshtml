@model BaiTap_03_23WebC_Nhom10.Models.Product
@{
    Layout = "_Layout";
}

@section Title {
        Thêm sản phẩm
}

<div class="card-body">
    <form id="frmAddProduct" enctype="multipart/form-data">
        <div class="row g-3">
            <div class="col-12">
                <!-- Tên sản phẩm -->
                <label class="form-label fw-bold">Tên sản phẩm</label>
                <input type="text" id="PRODUCT_NAME" class="form-control"
                       placeholder="Nhập tên (nhiều tên cách nhau bằng dấu ;)" required>

                <!-- Giá -->
                <label class="form-label fw-bold mt-3">Giá</label>
                <input type="number" id="PRICE" class="form-control" required>

                <!-- Số lượng -->
                <label class="form-label fw-bold mt-3">Số lượng</label>
                <input type="number" id="QUALITY" class="form-control">

                <!-- Giảm giá -->
                <label class="form-label fw-bold mt-3">Giảm giá (%)</label>
                <input type="number" id="DISCOUNT" class="form-control">

                <!-- Mô tả -->
                <label class="form-label fw-bold mt-3">Mô tả</label>
                <textarea id="DESCRIPTION" rows="4" class="form-control"></textarea>

                <!-- Danh mục -->
                <label class="form-label fw-bold mt-3">Danh mục</label>
                <div class="d-flex align-items-center mb-2" id="categoryContainer">
                    <select id="CATEGORY_ID" class="form-select me-3" style="width: 400px;">
                        <option value="">-- Chọn danh mục --</option>
                    </select>
                    <button type="button" class="btn btn-success flex-shrink-0" id="btnMoreCategory">Thêm mới</button>
                </div>

                <!-- Input thêm danh mục -->
                <div class="d-flex align-items-center mb-3" id="newCategoryContainer" style="display: none;">
                    <input type="text" id="newCategoryName" class="form-control me-2" placeholder="Nhập tên danh mục...">
                    <button type="button" class="btn btn-success" id="btnSaveCategory">Thêm</button>
                </div>

                <!-- Tag -->
                <label class="form-label fw-bold mt-3">Tag</label>
                <input type="text" id="TAG_ID" class="form-control" placeholder="Nhập 1 tag...">

                <!-- Hình ảnh -->
                <label class="form-label fw-bold mt-3">Hình ảnh sản phẩm</label>
                <input type="file" id="IMAGE" class="form-control" accept="image/*" multiple>
                <div id="previewContainer" class="mt-2"></div>
            </div>
        </div>

        <!-- Nút hành động -->
        <div class="text-center mt-4 d-flex justify-content-center gap-2">
            <button type="button" id="btnAdd" class="btn btn-outline-primary">
                <i class="bi bi-save"></i> Lưu sản phẩm
            </button>
            <button type="button" id="btnBack" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Quay lại
            </button>
        </div>
    </form>
</div>

@section js {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

    <script>
        $(function () {
            loadCategories();
            loadTags();

            // ======= Load Categories =======
            function loadCategories() {
                $.getJSON('/api/categories', res => {
                    const select = $('#CATEGORY_ID');
                    select.empty().append('<option value="">-- Chọn danh mục --</option>');
                    res.forEach(cat => select.append(`<option value="${cat.id}">${cat.categoryName}</option>`));
                });
            }

            function loadTags() {
                $.getJSON('/api/tags', res => {
                    const tags = res.map(t => t.tagName ?? t.name ?? t.TAG_NAME ?? '');
                    $("#TAG_ID").autocomplete({
                        source: tags,
                        minLength: 1,
                        appendTo: "body"
                    });
                });
            }

            $('#btnMoreCategory').click(() => $('#newCategoryContainer').toggle());

            $('#btnSaveCategory').click(() => {
                const name = $('#newCategoryName').val().trim();
                if (!name) return alert('Vui lòng nhập tên danh mục!');
                $.ajax({
                    url: '/api/categories',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ categoryName: name, status: true }),
                    success: cat => {
                        $('#CATEGORY_ID').append(`<option value="${cat.id}" selected>${name}</option>`);
                        $('#newCategoryName').val('');
                        $('#newCategoryContainer').hide();
                    }
                });
            });

            $('#IMAGE').on('change', function (e) {
                const files = e.target.files;
                const container = $('#previewContainer').empty();
                Array.from(files).forEach(file => {
                    const url = URL.createObjectURL(file);
                    const item = $(`
                        <div class="d-inline-block position-relative m-2">
                            <img src="${url}" class="preview-img">
                        </div>
                    `);
                    container.append(item);
                });
            });

            $('#btnAdd').click(() => {
                const formData = new FormData();
                formData.append('productName', $('#PRODUCT_NAME').val());
                formData.append('price', $('#PRICE').val());
                formData.append('quality', $('#QUALITY').val() || 0);
                formData.append('discount', $('#DISCOUNT').val() || 0);
                formData.append('description', $('#DESCRIPTION').val());
                formData.append('categoryID', $('#CATEGORY_ID').val() || 0);
                formData.append('tagID', $('#TAG_ID').val().trim());

                const files = $('#IMAGE')[0].files;
                if (files && files.length > 0) {
                    Array.from(files).forEach((file, i) => {
                        formData.append(`file${i}`, file);
                    });
                }

                $.ajax({
                    url: '/api/products',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: res => {
                        alert(res.message || 'Thêm sản phẩm thành công!');
                        window.location.href = '@Url.Action("Index", "Products", new { area = "Admin" })';
                    },
                    error: xhr => {
                        alert(xhr.responseJSON?.error ||  'Lỗi khi thêm sản phẩm!');
                    }
                });
            });

            $('#btnBack').click(() => {
                window.location.href = '@Url.Action("Index", "Products", new { area = "Admin" })';
            });
        });
    </script>
}